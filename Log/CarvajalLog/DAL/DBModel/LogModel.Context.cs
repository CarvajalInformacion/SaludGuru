//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarvajalLog.DAL.DBModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LogConnection : DbContext
    {
        public LogConnection()
            : base("name=LogConnection")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SP_InsertLogAuth(Nullable<int> lUserId, string lAction, Nullable<int> lIsSuccessfull, string lErrorMessage, Nullable<int> lIn)
        {
            var lUserIdParameter = lUserId.HasValue ?
                new ObjectParameter("LUserId", lUserId) :
                new ObjectParameter("LUserId", typeof(int));
    
            var lActionParameter = lAction != null ?
                new ObjectParameter("LAction", lAction) :
                new ObjectParameter("LAction", typeof(string));
    
            var lIsSuccessfullParameter = lIsSuccessfull.HasValue ?
                new ObjectParameter("LIsSuccessfull", lIsSuccessfull) :
                new ObjectParameter("LIsSuccessfull", typeof(int));
    
            var lErrorMessageParameter = lErrorMessage != null ?
                new ObjectParameter("LErrorMessage", lErrorMessage) :
                new ObjectParameter("LErrorMessage", typeof(string));
    
            var lInParameter = lIn.HasValue ?
                new ObjectParameter("LIn", lIn) :
                new ObjectParameter("LIn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertLogAuth", lUserIdParameter, lActionParameter, lIsSuccessfullParameter, lErrorMessageParameter, lInParameter);
        }
    
        public virtual int SP_InsertLogMessage(Nullable<int> lUserId, string lAction, Nullable<int> lIsSuccessfull, string lErrorMessage, string lMessageFrom, string lMessageTo, Nullable<int> lIdMessage)
        {
            var lUserIdParameter = lUserId.HasValue ?
                new ObjectParameter("LUserId", lUserId) :
                new ObjectParameter("LUserId", typeof(int));
    
            var lActionParameter = lAction != null ?
                new ObjectParameter("LAction", lAction) :
                new ObjectParameter("LAction", typeof(string));
    
            var lIsSuccessfullParameter = lIsSuccessfull.HasValue ?
                new ObjectParameter("LIsSuccessfull", lIsSuccessfull) :
                new ObjectParameter("LIsSuccessfull", typeof(int));
    
            var lErrorMessageParameter = lErrorMessage != null ?
                new ObjectParameter("LErrorMessage", lErrorMessage) :
                new ObjectParameter("LErrorMessage", typeof(string));
    
            var lMessageFromParameter = lMessageFrom != null ?
                new ObjectParameter("LMessageFrom", lMessageFrom) :
                new ObjectParameter("LMessageFrom", typeof(string));
    
            var lMessageToParameter = lMessageTo != null ?
                new ObjectParameter("LMessageTo", lMessageTo) :
                new ObjectParameter("LMessageTo", typeof(string));
    
            var lIdMessageParameter = lIdMessage.HasValue ?
                new ObjectParameter("LIdMessage", lIdMessage) :
                new ObjectParameter("LIdMessage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertLogMessage", lUserIdParameter, lActionParameter, lIsSuccessfullParameter, lErrorMessageParameter, lMessageFromParameter, lMessageToParameter, lIdMessageParameter);
        }
    }
}
