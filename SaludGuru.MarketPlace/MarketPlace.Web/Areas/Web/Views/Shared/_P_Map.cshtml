@model MarketPlace.Models.Profile.ProfileViewModel

@if (!Model.RenderScripts)
{
    <div>
        <span>Ubicación del Doctor</span>
        <div id="divOfficeMap">
        </div>
    </div>

    <!--templates-->
    <div style="display:none;">
        <!--tool tip template-->
        <div id="OfficeToolTip_divOfficeMap">
            <div>
                <img src="${ProfileImage}" />
                <div>
                    <span>Dirección: ${Address}</span>
                    <span>Teléfono: ${Telephone}</span>
                </div>
            </div>

        </div>
    </div>
}
else
{
    //create office calendar object
    var oBaseController = ViewContext.Controller as MarketPlace.Web.Controllers.BaseController;

    if (Model.CurrentProfile.RelatedOffice != null && Model.CurrentProfile.RelatedOffice.Count > 0)
    {
        string oOfficeInfo = (new System.Web.Script.Serialization.JavaScriptSerializer()).
            Serialize(Model.CurrentProfile.RelatedOffice.
                Where(of => of.City.CityId == oBaseController.CurrentCookie.CurrentCity).
                Select(of =>
                    new
                    {
                        ProfilePublicId = Model.CurrentProfile.ProfilePublicId,
                        ProfileImage = Model.CurrentProfile.ProfileInfo.
                            Where(x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.ImageProfileSmall).
                            Select(x => x.Value).
                            DefaultIfEmpty(string.Empty).
                            FirstOrDefault(),
                        OfficePublicId = of.OfficePublicId,
                        OfficeName = of.Name,
                        Geolocation = of.OfficeInfo.
                            Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Geolocation).
                            Select(x => x.Value).
                            DefaultIfEmpty(string.Empty).
                            FirstOrDefault(),
                        Address = of.OfficeInfo.
                            Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).
                            Select(x => x.Value).
                            DefaultIfEmpty(string.Empty).
                            FirstOrDefault(),
                        Telephone = of.OfficeInfo.
                            Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).
                            Select(x => x.Value).
                            DefaultIfEmpty(string.Empty).
                            FirstOrDefault(),
                        IsDefault = of.IsDefault,
                        City = of.City,
                    }).OrderBy(x => x.IsDefault).
                    OrderBy(x => x.OfficeName).ToList());

        List<double> lstLat = Model.CurrentProfile.RelatedOffice.
                Where(of => of.City.CityId == oBaseController.CurrentCookie.CurrentCity).
                Select(lat => lat.OfficeInfo.
                            Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Geolocation &&
                                       !string.IsNullOrEmpty(x.Value) &&
                                       x.Value.Split(',').Length >= 2).
                            Select(x => Convert.ToDouble(x.Value.Split(',')[0], System.Globalization.CultureInfo.CreateSpecificCulture("EN-us"))).
                            DefaultIfEmpty(0).
                            FirstOrDefault()).
                ToList();

        List<double> lstLon = Model.CurrentProfile.RelatedOffice.
                Where(of => of.City.CityId == oBaseController.CurrentCookie.CurrentCity).
                Select(lat => lat.OfficeInfo.
                            Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Geolocation &&
                                       !string.IsNullOrEmpty(x.Value) &&
                                       x.Value.Split(',').Length >= 2).
                            Select(x => Convert.ToDouble(x.Value.Split(',')[1], System.Globalization.CultureInfo.CreateSpecificCulture("EN-us"))).
                            DefaultIfEmpty(0).
                            FirstOrDefault()).
                ToList();




        <script type="text/javascript">
            $(document).ready(function () {
                ProfileMapObject.Init({
                    DivId: 'divOfficeMap',
                    OfficeInfo : @Html.Raw(oOfficeInfo),
                    CenterMap: '@(((lstLat.Min() + lstLat.Max()) / 2).ToString(System.Globalization.CultureInfo.CreateSpecificCulture("EN-us")) + "," + ((lstLon.Min() + lstLon.Max()) / 2).ToString(System.Globalization.CultureInfo.CreateSpecificCulture("EN-us")))',
                });
                ProfileMapObject.RenderAsync();
            });
        </script>
    }
}