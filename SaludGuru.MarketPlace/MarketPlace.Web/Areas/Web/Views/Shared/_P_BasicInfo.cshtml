@model SaludGuruProfile.Manager.Models.Profile.ProfileModel

@if (Model != null && !string.IsNullOrEmpty(Model.ProfilePublicId))
{
    <div class="MPResultsPaidProfile">
        @{

    //get image profile
    var ovImageProfile = MarketPlace.Models.General.InternalSettings.Instance
                 [MarketPlace.Models.General.Constants.C_Settings_Profile_SmallImageDefault].Value;

    //get default specialty
    var ovDefaultSpecialty = Model.DefaultSpecialty != null ?
            Model.DefaultSpecialty :
            (Model.RelatedSpecialty != null ?
            Model.RelatedSpecialty.FirstOrDefault() :
            null);

        }
        <!--certified image-->
        <div class="MPResultsCertified">
        </div>
        @*PRIMERA COLUMNA FOTICO FACEBOOK*@
        <div class="MPResultsPaidProfileDoctorPicture">
            <a class="MPResultsDoctorPictureWrapper" href="javascrip:;">
                <img class="MPResultsDoctorPicture" src="@ovImageProfile" />
            </a>
            <div class="MPResultsPaidProfileDoctorSocial">
            </div>
        </div>

        @*SEGUNDA COLUMNA DATICOS*@
        <div class="MPResultsPaidProfileDoctorData">
            <a class="MPResultsPaidProfileDoctorName" href="javascrip:;">
                @(Model.Name + " " + Model.LastName)
            </a>

            @if (ovDefaultSpecialty != null && !string.IsNullOrEmpty(ovDefaultSpecialty.Name))
            {
                    <!--Principal specialty-->
                <span class="MPResultsSpecialityName">@ovDefaultSpecialty.Name</span>
            }
            <label class="MPResultsEnsurance">Seguros médicos:</label>
            <ul>
                @foreach (string str in Model.RelatedInsurance.Select(x => x.Name).ToList())
                {
                    <li class="MPResultsInsuranceName">@str</li>
                }
            </ul>
        </div>



        <div class="MPResultsDoctorDescriptionWrapper">
            @{
            SaludGuruProfile.Manager.Models.Office.OfficeModel oCurrentOffice = null;
            if (Model.RelatedOffice != null && Model.RelatedOffice.Count > 0)
            {
                oCurrentOffice = Model.RelatedOffice.Where(x => x.IsDefault == true).FirstOrDefault();
                if (oCurrentOffice == null)
                {
                    oCurrentOffice = Model.RelatedOffice.FirstOrDefault();
                }
            }
            }
            @if (oCurrentOffice != null)
            {
                <div class="OfficeSelector">
                    <span class="OfficeTextSelector">Ver datos de contacto</span>
                    <div class="OfficeContactSelector" style="display:none;">
                        <span class="OfficeContactAddress">Dirección: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                        <span class="OfficeContactTelephone">Telefono: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                    </div>
                </div>
            }
        </div>
        <div class="MPResultsDoctorLinksWrapper">
        </div>
    </div>
}