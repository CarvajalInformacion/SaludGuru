@model MarketPlace.Models.Profile.SearchViewModel

@{
    var lstInsurance = Model.CurrentFilters.Where(x => x.FilterType == SaludGuruProfile.Manager.Models.enumFilterType.Insurance).ToList();
    var lstSpecialty = Model.CurrentFilters.Where(x => x.FilterType == SaludGuruProfile.Manager.Models.enumFilterType.Specialty).ToList();
    var ScheduleAvailable = Model.CurrentFilters.Where(x => x.FilterType == SaludGuruProfile.Manager.Models.enumFilterType.ScheduleAvailable).FirstOrDefault();
    var IsCertified = Model.CurrentFilters.Where(x => x.FilterType == SaludGuruProfile.Manager.Models.enumFilterType.IsCertified).FirstOrDefault();
    int ItemsToShow = 3;

    string BaseUrl = Request.Url.ToString();

    if (BaseUrl.IndexOf("Filter") >= 0)
    {
        if (!string.IsNullOrEmpty(Model.CurrentRequestFilter))
        {
            BaseUrl = BaseUrl.Replace(Model.CurrentRequestFilter, Model.CurrentRequestFilter + ";{NewFilter};");
        }
        else
        {
            BaseUrl = BaseUrl.Replace("Filter=", "Filter={NewFilter}");
        }
    }
    else if (BaseUrl.IndexOf("?") >= 0)
    {
        BaseUrl = BaseUrl + "&Filter={NewFilter}";
    }
    else
    {
        BaseUrl = BaseUrl + "?Filter={NewFilter}";
    }
}

<div>
    <ul class="SFilterList">
        <li class="SFilterTitle">
            <label>Filtrar busqueda por:</label>
        </li>
        @if (Model.CurrentInsurance != null) { }
        else if (Model.FilterInsurance != null && lstInsurance.Count > 0)
        {
            var oInsurance = lstInsurance.
                Where(x => !string.IsNullOrEmpty(x.ItemId) &&
                         x.ItemId.Trim() == Model.FilterInsurance.Value.ToString()).
                 FirstOrDefault();

            string vFilterUrl = BaseUrl.Replace(";{NewFilter};", "");
            if (oInsurance != null)
            {
                vFilterUrl = vFilterUrl.Replace(((int)SaludGuruProfile.Manager.Models.enumFilterType.Insurance).ToString() + "," + oInsurance.ItemId, "");
            }

            <li class="SFilterInsurance">
                <label>Seguro</label>
                <ul>
                    <li>
                        <input type="checkbox" checked="checked" onchange="javascript: fnFilter('@vFilterUrl');" />
                        <span>@oInsurance.ItemName</span>
                    </li>
                </ul>
            </li>
        }
        else if (lstInsurance != null && lstInsurance.Count > 0)
        {
            <li class="SFilterInsurance">
                <label>Seguro</label>
                <ul>
                    @foreach (var oInsurance in lstInsurance)
                    {
                        string vFilterUrl = BaseUrl.
                            Replace("{NewFilter}",
                                ((int)SaludGuruProfile.Manager.Models.enumFilterType.Insurance).ToString() + "," + oInsurance.ItemId);

                        if (lstInsurance.IndexOf(oInsurance) <= ItemsToShow)
                        {
                            <li>
                                <input type="checkbox" onchange="javascript: fnFilter('@vFilterUrl');" />
                                <span>@(oInsurance.ItemName + " (" + oInsurance.ItemCount + ")")</span>
                            </li>
                        }
                        else
                        {
                            <li class="SelectorInsurance" style="display:none;">
                                <input type="checkbox" onchange="javascript: fnFilter('@vFilterUrl');" />
                                <span>@(oInsurance.ItemName + " (" + oInsurance.ItemCount + ")")</span>
                            </li>
                        }
                    }
                </ul>
                <a id="SelectorInsurance_a" href="javascript:fnViewMoreLessFilter('SelectorInsurance');" rel="nofollow">Ver más</a>
            </li>
        }
        @if (Model.CurrentSpecialty != null) { }
        else if (Model.FilterSpecialty != null && lstSpecialty.Count > 0)
        {
            var oSpecialty = lstSpecialty.
                Where(x => !string.IsNullOrEmpty(x.ItemId) &&
                         x.ItemId.Trim() == Model.FilterSpecialty.Value.ToString()).
                 FirstOrDefault();

            string vFilterUrl = BaseUrl.Replace(";{NewFilter};", "");

            if (oSpecialty != null)
            {
                vFilterUrl = vFilterUrl.Replace(((int)SaludGuruProfile.Manager.Models.enumFilterType.Specialty).ToString() + "," + oSpecialty.ItemId, "");
            }
            <li class="SFilterInsurance">
                <label>Especialidad</label>
                <ul>
                    <li>
                        <input type="checkbox" checked="checked" onchange="javascript: fnFilter('@vFilterUrl');" />
                        <span>@oSpecialty.ItemName</span>
                    </li>
                </ul>
            </li>
        }
        else if (lstSpecialty != null && lstSpecialty.Count > 0 && Model.FilterSpecialty == null)
        {
            <li class="SFilterSpecialty">
                <label>Especialidad</label>
                <ul>
                    @foreach (var oSpecialty in lstSpecialty)
                    {
                        string vFilterUrl = BaseUrl.
                            Replace("{NewFilter}",
                                    ((int)SaludGuruProfile.Manager.Models.enumFilterType.Specialty).ToString() + "," + oSpecialty.ItemId);

                        if (lstSpecialty.IndexOf(oSpecialty) <= ItemsToShow)
                        {
                            <li>
                                <input type="checkbox" onchange="javascript: fnFilter('@vFilterUrl');" />
                                <span>@(oSpecialty.ItemName + " (" + oSpecialty.ItemCount + ")")</span>
                            </li>
                        }
                        else
                        {
                            <li class="SelectorSpecialty" style="display:none;">
                                <input type="checkbox" onchange="javascript: fnFilter('@vFilterUrl');" />
                                <span>@(oSpecialty.ItemName + " (" + oSpecialty.ItemCount + ")")</span>
                            </li>
                        }
                    }
                </ul>
                <a id="SelectorSpecialty_a" href="javascript:fnViewMoreLessFilter('SelectorSpecialty');" rel="nofollow">Ver más</a>
            </li>
        }
        @if (Model.FilterScheduleAvailable)
        {
            string vFilterUrl = BaseUrl.
                Replace("{NewFilter}", "").
                Replace(((int)SaludGuruProfile.Manager.Models.enumFilterType.ScheduleAvailable).ToString() + ",true", "");

            <li class="SFilterAgendaOnline">
                <div class="CheckAgendaOnline">
                    <input type="checkbox" checked="checked" onchange="javascript: fnFilter('@vFilterUrl');" />
                </div>
                <label>Agenda en línea</label>
            </li>
        }
        else if (ScheduleAvailable != null && ScheduleAvailable.ItemCount > 0)
        {
            string vFilterUrl = BaseUrl.Replace("{NewFilter}", ((int)SaludGuruProfile.Manager.Models.enumFilterType.ScheduleAvailable).ToString() + ",true");

            <li class="SFilterAgendaOnline">
                <div class="CheckAgendaOnline">
                    <input type="checkbox" onchange="javascript: fnFilter('@vFilterUrl');" />
                </div>
                <label>Agenda en línea @("(" + ScheduleAvailable.ItemCount + ")")</label>
            </li>
        }

        @if (Model.FilterIsCertified)
        {
            string vFilterUrl = BaseUrl.
                Replace("{NewFilter}", "").
                Replace(((int)SaludGuruProfile.Manager.Models.enumFilterType.IsCertified).ToString() + ",true", "");

            <li class="SFilterIsCertified">
                <div class="CheckIsCertified">
                    <input type="checkbox" checked="checked" onchange="javascript: fnFilter('@vFilterUrl');" />
                </div>
                <label>Profesional certificado</label>
            </li>
        }
        else if (IsCertified != null && IsCertified.ItemCount > 0)
        {
            string vFilterUrl = BaseUrl.Replace("{NewFilter}", ((int)SaludGuruProfile.Manager.Models.enumFilterType.IsCertified).ToString() + ",true");

            <li class="SFilterIsCertified">
                <div class="CheckIsCertified">
                    <input type="checkbox" onchange="javascript: fnFilter('@vFilterUrl');" />
                </div>
                <label>Profesional certificado @("(" + IsCertified.ItemCount + ")")</label>
            </li>
        }
    </ul>

</div>
