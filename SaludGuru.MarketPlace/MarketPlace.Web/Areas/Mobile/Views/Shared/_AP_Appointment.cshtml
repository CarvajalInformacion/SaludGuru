@model MarketPlace.Models.Appointment.AppointmentViewModel

@{
}

@if (!Model.RenderScripts)
{
    if (Model.StartDate != null)
    {
        <input type="hidden" name="StartDate" id="StartDate" value="@Model.CurrentDate" />
    }
    else
    {
        <input type="hidden" name="StartDate" id="StartDate" value="" />
    }

    <div>
        <ul id="divAppointmentSchedule_Menu"></ul>
        <div id="divAppointmentSchedule">
        </div>
    </div>

    <!--templates-->
    <div style="display:none;">

        <!--appointment grid template-->
        <div id="divAppointmentSchedule_Template_Grid">

            <div class="SelOfficeGrid GridAP" id="divScheduleContainer_${OfficePublicId}">

                <div id="divGrid_Title">
                    
                </div>
            </div>
            <ul id="ul_GridFreeSchedule"></ul>
            <div id="divGrid_NotSchedule">
                <a  href="javascript:;">Buscar siguiente horario disponible</a>
            </div>
        </div>
    </div>
}
else
{
    //create office calendar object
    var oBaseController = ViewContext.Controller as MarketPlace.Web.Controllers.BaseController;

    string oOfficeInfo = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.CurrentProfile.RelatedOffice.
            Where(of => of.City.CityId == oBaseController.CurrentCookie.CurrentCity &&
                    (string.IsNullOrEmpty(Model.CurrentOffice) ? true : of.OfficePublicId == Model.CurrentOffice)).
            Select(of =>
                new
                {
                    ProfilePublicId = Model.CurrentProfile.ProfilePublicId,
                    OfficePublicId = of.OfficePublicId,
                    OfficeName = of.Name,
                    OfficeDivId = string.Empty,
                    IsDefault = of.IsDefault,
                    TreatmentList = of.RelatedTreatment != null ? of.RelatedTreatment.Select(tr => new { tr.CategoryId, tr.Name }).ToList() : null,
                }).OrderBy(x => x.IsDefault).
                OrderBy(x => x.OfficeName).ToList());

    <script type="text/javascript">
        $(document).ready(function () {
            AppointmentObject.Init({
                DivAppointmentId: 'divAppointmentSchedule',
                selOfficeId: 'SelectedOffice',
                selTreatmentId: 'SelectedTreatment',
                OfficeInfo : @Html.Raw(oOfficeInfo) ,
                NextAvailableDate : 'false',
            });
            AppointmentObject.RenderAsync();         
            $('#btnNextDay').click(function () {
                var nextDate = $('#lblNextDay').val();
                
                AppointmentObject.NextDay('SelectedOffice', '@Model.CurrentProfile.ProfilePublicId', 'true', 'SelectedTreatment');
            });
        });
    </script>
}