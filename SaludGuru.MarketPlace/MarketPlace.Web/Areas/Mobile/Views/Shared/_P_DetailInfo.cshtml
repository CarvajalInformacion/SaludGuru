@model MarketPlace.Models.Profile.ProfileViewModel

@{
    //get profile text
    var ovProfileText = Model.CurrentProfile.ProfileInfo.
            Where(x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.ProfileText).
            Select(x => x.LargeValue).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();

    //get education text
    var ovProfileEducation = Model.CurrentProfile.ProfileInfo.
            Where(x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Education).
            Select(x => x.LargeValue).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();

    //get certification text
    var ovProfileCertification = Model.CurrentProfile.ProfileInfo.
            Where(x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Certification).
            Select(x => x.LargeValue).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();

}

@if (!Model.RenderScripts)
{
    <div class="MPProfileInfoDetailProfile">
        <ul>
            @if (Model.CurrentProfile.RelatedOffice != null &&
                Model.CurrentProfile.RelatedOffice.Count > 0)
            {
                <li>
                    <h6>Datos de contacto</h6>
                    <div role="main" class="MPMobileOfficeList">

                        <div data-role="collapsible-set">
                            
                            @foreach (var oCurrentOffice in Model.CurrentProfile.RelatedOffice)
                            {                                
                                if (Model.CurrentProfile.RelatedOffice.IndexOf(oCurrentOffice) == 0)
                                {
                                    <div data-role="collapsible" data-collapsed="false">
                                        <h3 class="MPMobileOfficeName"><a href="#fragment-@oCurrentOffice.OfficePublicId">@oCurrentOffice.Name.ToString()</a></h3>
                                        <p>
                                            <div id="fragment-@oCurrentOffice.OfficePublicId">
                                                <span class="OfficeContactAddress">Dirección: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                                <span class="OfficeContactTelephone">Telefono: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                            </div>

                                            <div class="MPMobileCalendarOffice">
                                                <h6>Agenda en Linea</h6>
                                                @Html.Partial(MVC.Mobile.Shared.Views._P_Appointment, Model)
                                            </div>
                                        </p>
                                    </div>
                                }
                                else
                                {
                                    <div data-role="collapsible" data-collapsed="true">
                                        <h3 class="MPMobileOfficeName"><a href="#fragment-@oCurrentOffice.OfficePublicId">@oCurrentOffice.Name.ToString()</a></h3>
                                        <p>
                                            <div id="fragment-@oCurrentOffice.OfficePublicId">
                                                <span class="OfficeContactAddress">Dirección: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                                <span class="OfficeContactTelephone">Telefono: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                            </div>


                                            <div class="MPMobileCalendarOffice">
                                                <h6>Agenda en Linea</h6>
                                                @Html.Partial(MVC.Mobile.Shared.Views._P_Appointment, Model)
                                            </div>
                                        </p>
                                    </div>
                                }
                            } 
                        </div>
                    </div>
                    
                    <hr class="featurette-divider __loop">
                </li>
            }
            @if (!string.IsNullOrEmpty(ovProfileText))
            {
                <li>
                    <h6>Perfil profesional</h6>
                    <div id="divProfileText" class="selProfileDescriptions">
                        <p>@ovProfileText.Trim()</p>
                    </div>
                    <hr class="featurette-divider __loop">
                </li>
            }
            @if (!string.IsNullOrEmpty(ovProfileEducation))
            {
                <li>
                    <h6>Educación</h6>
                    <div id="divEducation" class="selProfileDescriptions">
                        <p>@ovProfileEducation.Trim()</p>
                    </div>
                    <hr class="featurette-divider __loop">
                </li>
            }
            @if (!string.IsNullOrEmpty(ovProfileCertification))
            {
                <li>
                    <h6>Acreditaciones</h6>
                    <div id="divCertification" class="selProfileDescriptions">
                        <p>@ovProfileCertification.Trim()</p>
                    </div>
                </li>
            }

        </ul>

    </div>
}
