@model MarketPlace.Models.Profile.ProfileViewModel

@{
    //get profile text
    var ovProfileText = Model.CurrentProfile.ProfileInfo.
            Where(x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.ProfileText).
            Select(x => x.LargeValue).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();

    //get education text
    var ovProfileEducation = Model.CurrentProfile.ProfileInfo.
            Where(x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Education).
            Select(x => x.LargeValue).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();

    //get certification text
    var ovProfileCertification = Model.CurrentProfile.ProfileInfo.
            Where(x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Certification).
            Select(x => x.LargeValue).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();

    string ovCurrentDomain = (ViewContext.Controller as MarketPlace.Web.Controllers.BaseController).CurrentDomainUrl;

}

@if (!Model.RenderScripts)
{
    <div class="MPProfileInfoDetailProfile">
        <ul>
            @if (Model.CurrentProfile.RelatedOffice != null &&
                Model.CurrentProfile.RelatedOffice.Count > 0)
            {
                <li>
                    <h6>Datos de contacto</h6>
                    <div role="main" class="MPMobileOfficeList">

                        <div data-role="collapsible-set">

                            @foreach (var oCurrentOffice in Model.CurrentProfile.RelatedOffice)
                            {
                                var urlProfile = (ovCurrentDomain + Url.Action(MVC.Appointment.ActionNames.Index, MVC.Appointment.Name, new { ProfilePublicId = Model.CurrentProfile.ProfilePublicId }));
                                if (Model.CurrentProfile.RelatedOffice.IndexOf(oCurrentOffice) == 0)
                                {
                                
                                    <div data-role="collapsible" data-collapsed="false">
                                        <h3 class="MPMobileOfficeName"><a href="#fragment-@oCurrentOffice.OfficePublicId">@oCurrentOffice.Name.ToString()</a></h3>
                                        <p>
                                            <div id="fragment-@oCurrentOffice.OfficePublicId">
                                                <span class="OfficeContactAddress">Dirección: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                                <span class="OfficeContactTelephone">Telefono: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                            </div>
                                            <h6>Agenda en Linea</h6>
                                            <div>
                                                <ul id="divAppointmentSchedule_Menu"></ul>
                                                <div id="divAppointmentSchedule">
                                                </div>
                                            </div>
                                            <!--templates-->
                                            <div id="FreeScheduleId">
                                                <!--appointment grid template-->
                                                <div id="divAppointmentSchedule_Template_Grid">
                                                    <div class="SelOfficeGrid GridAP" id="divScheduleContainer_${OfficePublicId}">
                                                        <div id="divGrid_Title_@oCurrentOffice.OfficePublicId">
                                                        </div>
                                                    </div>
                                                    <ul id="ul_GridFreeScheduleProfile_@oCurrentOffice.OfficePublicId"></ul>
                                                    <div id="divGrid_NotSchedule">
                                                        <a href="javascript:;">Buscar siguiente horario disponible</a>
                                                    </div>
                                                </div>
                                            </div>

                                            <a class="renders" onclick="javascript:AppointmentObject.RenderOfficeScheduleProfile('@urlProfile', '@oCurrentOffice.OfficePublicId', '', '@Model.CurrentProfile.ProfilePublicId', 'false', '@oCurrentOffice.RelatedTreatment.Where(x => x.IsDefault == true).Select(x => x.CategoryId).FirstOrDefault()', 'false');" href="javascript:"></a>

                                            </p>
                                    </div>
                                }
                                else
                                {
                                    <div data-role="collapsible" data-collapsed="true">
                                        <h3 class="MPMobileOfficeName">
                                            <a onclick="javascript:AppointmentObject.RenderOfficeScheduleProfile('@urlProfile', '@oCurrentOffice.OfficePublicId', '', '@Model.CurrentProfile.ProfilePublicId', 'false', '@oCurrentOffice.RelatedTreatment.Where(x => x.IsDefault == true).Select(x => x.CategoryId).FirstOrDefault()', 'false');" href="#fragment-@oCurrentOffice.OfficePublicId">@oCurrentOffice.Name.ToString()</a> 
                                        <a href="#fragment-@oCurrentOffice.OfficePublicId">@oCurrentOffice.Name.ToString()</a></h3>
                                        <p>
                                            <div id="fragment-@oCurrentOffice.OfficePublicId">
                                                <span class="OfficeContactAddress">Dirección: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                                <span class="OfficeContactTelephone">Telefono: @oCurrentOffice.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault()</span>
                                            </div>
                                            <h6>Agenda en Linea</h6>
                                            <div>
                                                <ul id="divAppointmentSchedule_Menu"></ul>
                                                <div id="divAppointmentSchedule">
                                                </div>
                                            </div>
                                            <!--templates-->
                                            <div id="FreeScheduleId">
                                                <!--appointment grid template-->
                                                <div id="divAppointmentSchedule_Template_Grid">
                                                    <div class="SelOfficeGrid GridAP" id="divScheduleContainer_${OfficePublicId}">
                                                        <div id="divGrid_Title_@oCurrentOffice.OfficePublicId">
                                                        </div>
                                                    </div>
                                                    <ul id="ul_GridFreeScheduleProfile_@oCurrentOffice.OfficePublicId"></ul>
                                                    <div id="divGrid_NotSchedule">
                                                        <a href="javascript:;">Buscar siguiente horario disponible</a>
                                                    </div>
                                                </div>
                                            </div>

                                            @*<a id="render" onclick="javascript:AppointmentObject.RenderOfficeScheduleProfile('@urlProfile','@oCurrentOffice.OfficePublicId', '', '@Model.CurrentProfile.ProfilePublicId', 'false', '@oCurrentOffice.RelatedTreatment.Where(x => x.IsDefault == true).Select(x => x.CategoryId).FirstOrDefault()', 'false');" href="javascript:">AGENDA TU CITA</a>*@
                                        </p>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                    <hr class="featurette-divider __loop">
                </li>
            }
            @if (!string.IsNullOrEmpty(ovProfileText))
            {
                <li>
                    <h6>Perfil profesional</h6>
                    <div id="divProfileText" class="selProfileDescriptions">
                        <p>@ovProfileText.Trim()</p>
                    </div>
                    <hr class="featurette-divider __loop">
                </li>
            }
            @if (!string.IsNullOrEmpty(ovProfileEducation))
            {
                <li>
                    <h6>Educación</h6>
                    <div id="divEducation" class="selProfileDescriptions">
                        <p>@ovProfileEducation.Trim()</p>
                    </div>
                    <hr class="featurette-divider __loop">
                </li>
            }
            @if (!string.IsNullOrEmpty(ovProfileCertification))
            {
                <li>
                    <h6>Acreditaciones</h6>
                    <div id="divCertification" class="selProfileDescriptions">
                        <p>@ovProfileCertification.Trim()</p>
                    </div>
                </li>
            }
        </ul>
    </div>
}
else
{

    //create office calendar object
    var oBaseController = ViewContext.Controller as MarketPlace.Web.Controllers.BaseController;

    string oOfficeInfo = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.CurrentProfile.RelatedOffice.
            Where(of => of.City.CityId == oBaseController.CurrentCookie.CurrentCity).
            Select(of =>
                new
                {
                    ProfilePublicId = Model.CurrentProfile.ProfilePublicId,
                    OfficePublicId = of.OfficePublicId,
                    OfficeName = of.Name,
                    OfficeDivId = string.Empty,
                    IsDefault = of.IsDefault,
                    City = of.City,
                    OfficeAddress = of.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault(),
                    OfficeTelephone = of.OfficeInfo.Where(x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).Select(x => x.Value).DefaultIfEmpty(string.Empty).FirstOrDefault(),
                }).OrderBy(x => x.IsDefault).
                OrderBy(x => x.OfficeName).ToList());

    <script type="text/javascript">
        $(document).ready(function () {

            //var selectedOfficeVal = $("#officeSelectedId").val();
            //AppointmentObject.RenderOfficeScheduleProfile(selectedOfficeVal);

            @*ProfileAppointmentObject.Init({
                DivId: 'divAppointmentSchedule',
                OfficeInfo : @Html.Raw(oOfficeInfo),
            });
            ProfileAppointmentObject.RenderAsync();*@

            window.location = $('.renders').attr('onclick');
            //window.location = $('#render').attr('onclick');
        });
    </script>
}