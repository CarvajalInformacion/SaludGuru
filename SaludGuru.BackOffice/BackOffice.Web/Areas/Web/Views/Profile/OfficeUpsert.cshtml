@model BackOffice.Models.Office.OfficeUpsertModel
@{
    ViewBag.Title = "CreateOffice";
    Layout = "~/Areas/Web/Views/Shared/_Layout.cshtml";
}
<div class="BOProfileMenuWrapper">
    @Html.Partial(MVC.Web.Shared.Views._P_ProfileMenu, Model.Profile)
</div>


<div class="BOProfileFormWrapper">

    @if (Model.CurrentOffice != null)
    {
        Html.RenderPartial(MVC.Web.Shared.Views._P_ProfileOfficeMenu, Model);
    }

    <div class="BOFormDataWrapper">
        <form action="@Url.Action(MVC.Profile.ActionNames.OfficeUpsert, MVC.Profile.Name, new { ProfilePublicId = Model.Profile.ProfilePublicId, OfficePublicId = Model.CurrentOffice ==null?string.Empty:Model.CurrentOffice.OfficePublicId })" method="post">
            <ul>

                <h3 class="BOCreateOfficeLabel">Crear Nueva Oficina</h3>

                <li>
                    <label>Nombre</label>
                    <input id="Name" name="Name" value="@(Model.CurrentOffice == null ? string.Empty : Model.CurrentOffice.Name)" type="text" />
                </li>
                <li>
                    <label>Ciudad</label>
                    <select id="City" name="City">
                        @foreach (SaludGuruProfile.Manager.Models.General.CityModel tp in
                        Model.CitiesToSel.
                        OrderBy(x => x.CityName)
                        .ToList())
                        {
                            if (Model.CurrentOffice != null && tp.CityId == (int)Model.CurrentOffice.City.CityId)
                            {
                                <option value="@tp.CityId" selected="selected">@tp.CityName</option>
                            }
                            else
                            {
                                <option value="@tp.CityId">@tp.CityName</option>
                            }
                        }
                    </select>
                </li>
                <li>
                    <label>Sucursal principal</label>
                    @{
                        if (Model.CurrentOffice != null && Model.CurrentOffice.IsDefault)
                        {
                            <input type="checkbox" id="IsDefault" name="IsDefault" checked="checked" />
                        }
                        else
                        {
                            <input type="checkbox" id="IsDefault" name="IsDefault" />
                        }
                    }
                </li>
                <li>
                    @{
                        var CatInfo_AD = Model.CurrentOffice == null ? null :
                            Model.CurrentOffice.OfficeInfo.Where
                               (x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Address).
                               Select(x => new { id = x.OfficeInfoId, val = x.Value }).
                                   DefaultIfEmpty(null).
                                   FirstOrDefault();
                        if (CatInfo_AD != null)
                        {
                            <input type="hidden" id="CatId_Address" name="CatId_Address" value="@CatInfo_AD.id" />
                        }
                    }
                    <label>Dirección</label>
                    <input id="Address" name="Address" value="@(CatInfo_AD == null ? string.Empty : CatInfo_AD.val)" type="text" />
                </li>
                <li>
                    @{
                        var CatInfo_TP = Model.CurrentOffice == null ? null :
                            Model.CurrentOffice.OfficeInfo.Where
                               (x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Telephone).
                               Select(x => new { id = x.OfficeInfoId, val = x.Value }).
                                   DefaultIfEmpty(null).
                                   FirstOrDefault();
                        if (CatInfo_TP != null)
                        {
                            <input type="hidden" id="CatId_Telephone" name="CatId_Telephone" value="@CatInfo_TP.id" />
                        }
                    }
                    <label>Telefono</label>
                    <input id="Telephone" name="Telephone" value="@(CatInfo_TP == null ? string.Empty : CatInfo_TP.val)" type="text" />
                </li>
                <li>
                    @{
                        var CatInfo_GL = Model.CurrentOffice == null ? null :
                            Model.CurrentOffice.OfficeInfo.Where
                               (x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.Geolocation).
                               Select(x => new { id = x.OfficeInfoId, val = x.Value }).
                                   DefaultIfEmpty(null).
                                   FirstOrDefault();
                        if (CatInfo_GL != null)
                        {
                            <input type="hidden" id="CatId_Geolocation" name="CatId_Geolocation" value="@CatInfo_GL.id" />
                        }
                    }
                    <label>Geolocalización</label>
                    <input id="Geolocation" name="Geolocation" value="@(CatInfo_GL == null ? string.Empty : CatInfo_GL.val)" type="text" />
                </li>
                <li>
                    <label>Duración de la cita (minutos)</label>
                    <select id="SlotMinutes" name="SlotMinutes">
                        @{
                            var CatInfo_SM = Model.CurrentOffice == null ? null :
                            Model.CurrentOffice.OfficeInfo.Where
                               (x => x.OfficeInfoType == SaludGuruProfile.Manager.Models.enumOfficeInfoType.SlotMinutes).
                               Select(x => new { id = x.OfficeInfoId, val = x.Value }).
                                   DefaultIfEmpty(null).
                                   FirstOrDefault();

                            if (CatInfo_SM != null)
                            {
                                if (CatInfo_SM.val == "5")
                                {
                                    <option value="5" selected="selected"> @CatInfo_SM.val </option>
                                }
                                else
                                {
                                    <option value="5">5</option>
                                }
                                if (CatInfo_SM.val == "10")
                                {
                                    <option value="10" selected="selected"> @CatInfo_SM.val </option>
                                }
                                else
                                {
                                    <option value="10">10</option>
                                }
                                if (CatInfo_SM.val == "15")
                                {
                                    <option value="15" selected="selected"> @CatInfo_SM.val </option>
                                }
                                else
                                {
                                    <option value="15">15</option>
                                }
                                if (CatInfo_SM.val == "20")
                                {
                                    <option value="20" selected="selected"> @CatInfo_SM.val </option>
                                }
                                else
                                {
                                    <option value="@CatInfo_SM.val">20</option>
                                }
                                if (CatInfo_SM.val == "30")
                                {
                                    <option value="30" selected="selected"> @CatInfo_SM.val </option>
                                }
                                else
                                {
                                    <option value="30">30</option>
                                }
                                
                                 <input type="hidden" id="CatId_SlotMinutes" name="CatId_SlotMinutes" value="@CatInfo_SM.id" />
                            }
                            else
                            {
                                <option value="5" selected="selected"> 5 </option>
                                <option value="10" selected="selected"> 10 </option>
                                <option value="20" selected="selected"> 20 </option>
                                <option value="30" selected="selected"> 30 </option>
                            }                           
                        }

                    </select>

                </li>
                @{
                    if (BackOffice.Models.General.SessionModel.CurrentUserAutorization.Role != SessionController.Models.Profile.enumRole.ProfileOperator)
                    {
                        <li class="BOButtonContainerShort">
                            <!--hiden fields-->
                            <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
                            <input class="BOButtons" type="submit" value="guardar" />
                        </li>
                    }
                }
            </ul>
        </form>
    </div>
</div>
