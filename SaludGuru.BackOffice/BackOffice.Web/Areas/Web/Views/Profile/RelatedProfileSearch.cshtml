@model BackOffice.Models.Profile.ProfileRelatedModel
@{
    ViewBag.Title = "RelatedProfileSearch";
    Layout = "~/Areas/Web/Views/Shared/_Layout.cshtml";
}

<div class="BOProfileMenuWrapper">
    @Html.Partial(MVC.Web.Shared.Views._P_ProfileMenu, Model.PrincipalProfile)
</div>

<div class="BOProfileTableWrapper">
    <h3>Listado de perfiles relacionados</h3>
    <div id="divGridRelatedProfile"></div>
</div>
<div id="templates" style="display:none;">
    <form method="post" action="@Url.Action(MVC.Profile.ActionNames.RelatedProfileSearch, MVC.Profile.Name,
                                    new { ProfilePublicId = Model.PrincipalProfile.ProfilePublicId })">
        <div id="templateHeader">
            <label>Nombre</label>  
            <input type="text" id="divGridProfile-txtSearch" name="divGridProfile-txtSearch" value="@(string.IsNullOrEmpty(Request["SearchParam"])?string.Empty:Request["SearchParam"])" />
            <input type="submit" id="divGridProfile-Search" value="Agregar" />
            <input type="hidden" id="Profile-id" name="Profile-id" value="" />
            @{
                //get json treatment
                string oProfileSearchData = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                    Serialize(Model.AutoComplitListProfiles.
                    Select(x => new
                    {
                        label = x.Name + " " + x.LastName,
                        value = x.ProfilePublicId,
                    }).ToList());
            }
            @*<a href="@Url.Action(MVC.Profile.ActionNames.ProfileCreate,MVC.Profile.Name)">Nuevo</a>*@
        </div>

        <div id="templateDelete">

            <!--hiden fields-->
            <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
            <input type="hidden" id="ProfileRoleId" name="ProfileRoleId" value="${ProfileRoleId}" />
            <input class="BOButtonsErase" type="submit" value="Borrar" />
        </div>
    </form>
</div>
<div id="TemplateUserFrom">
    <img src="${UserFromImage}" width="45" height="45" />
    <label style="vertical-align:17px; font-size: 16px; font-weight: normal">${Name}</label>
</div>

@{
    //get json office data
    string oRelatedProfileInfo = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.PrincipalProfile.ChildProfile.
            Select(x => new
            {
                UserFromImage = x.ProfileInfo.Where(p => p.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.ImageProfileSmall).Select(p => p.Value).FirstOrDefault(),
                Name = x.Name + " " + x.LastName,
                Email = x.ProfileInfo.Where(p => p.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Email).Select(p => p.Value).FirstOrDefault()
            }).ToList());
}
@section inlinescripts
{
    <script type="text/javascript">
        var vDataRelatedProfileInfo = @Html.Raw(oRelatedProfileInfo)
        $(document).ready(function () {
            //start office grid
            RelatedProfileListGrid('divGridRelatedProfile', vDataRelatedProfileInfo);
        });
    </script>
    <script type="text/javascript">
        var vDataSpecialty = @Html.Raw(oProfileSearchData)
            $(document).ready(function () {
                //start office grid
                OfficeSpecialtyAc('divGridProfile-txtSearch', vDataSpecialty);
            });
    </script>
}


