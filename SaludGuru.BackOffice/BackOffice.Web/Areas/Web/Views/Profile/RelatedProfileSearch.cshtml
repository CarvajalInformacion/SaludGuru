@model BackOffice.Models.Profile.ProfileRelatedModel
@{
    ViewBag.Title = "RelatedProfileSearch";
    Layout = "~/Areas/Web/Views/Shared/_Layout.cshtml";
}

<div class="BOProfileMenuWrapper">
    @Html.Partial(MVC.Web.Shared.Views._P_ProfileMenu, Model.PrincipalProfile)
</div>

<div class="BOProfileTableWrapper">
    <h3>Listado de perfiles relacionados</h3>
    <div id="divGridRelatedProfile"></div>
</div>
<div id="templates" style="display:none;">
    <div id="templateHeader">
        <form method="post" action="@Url.Action(MVC.Profile.ActionNames.RelatedProfileSearch, MVC.Profile.Name,
                                    new { ProfilePublicId = Model.PrincipalProfile.ProfilePublicId })">
            <ul class="BOEditDaySetUp">
                <li>
                    <label>Nombre</label>
                    <input type="hidden" id="divGridProfile-txtSearch-id" name="divGridProfile-txtSearch-id" value="" />
                    <input type="text" id="divGridProfile-txtSearch" name="divGridProfile-txtSearch" value="" />
                    @{
                        //get json treatment
                        string oProfileSearchData = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                            Serialize(Model.AutoComplitListProfiles.
                            Select(x => new
                            {
                                label = x.Name + " " + x.LastName,
                                value = x.ProfilePublicId,
                            }).ToList());
                    }
                </li>
                <li>
                    <!--hiden fields-->
                    <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
                    <input id="Add" class="BOAgregarButtons" type="submit" value="Agregar" />
                </li>
            </ul>
        </form>
    </div>
    <div id="templateDelete">
        <form method="post" action="@(Url.Action(MVC.Profile.ActionNames.RelatedProfileDelete, MVC.Profile.Name,
                new
                {
                    ProfilePublicId = Model.PrincipalProfile.ProfilePublicId
                }))">
            <!--hiden fields-->
            <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
            <input type="hidden" id="ProfileRelatedId" name="ProfileRelated" value="${Id}" />
            <input class="BOButtonsErase" type="submit" value="Borrar" />
        </form>
    </div>
    <!--hiden fields-->
    <div id="TemplateUserFrom">
        <img src="${UserFromImage}" width="45" height="45" />
        <label style="vertical-align:17px; font-size: 16px; font-weight: normal">${Name}</label>
    </div>
</div>


@{
    //get json office data
    string oRelatedProfileInfo = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.PrincipalProfile.ChildProfile.
            Select(x => new
            {
                Id = x.ProfilePublicId,
                UserFromImage = x.ProfileInfo.Where(p => p.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.ImageProfileSmall).Select(p => p.Value).FirstOrDefault(),
                Name = x.Name + " " + x.LastName,
                Email = x.ProfileInfo.Where(p => p.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Email).Select(p => p.Value).FirstOrDefault()
            }).ToList());
}

@section inlinescripts
{
    <script type="text/javascript">
        var vDataRelatedProfileInfo = @Html.Raw(oRelatedProfileInfo)
        $(document).ready(function () {
            //start RelatedProfileList grid
            RelatedProfileListGrid('divGridRelatedProfile', vDataRelatedProfileInfo);

            var vDataSpecialty = @Html.Raw(oProfileSearchData)
            //start office grid
            OfficeSpecialtyAc('divGridProfile-txtSearch', vDataSpecialty);

            //Validate RelatedProfile
            $("#Add").on("click", function () {
                var val = $("#divGridProfile-txtSearch-id").prop('value');
                if (val == null || val == "") {
                    ValidatePopUp("divGridProfile-txtSearch-id", "El profesional que desea agregar no está inscrito actualmente, " + " \n " + " para agregarlo por favor comunicarse con el área de soporte.", "Add")
                    return false;
                }
            });
        });
    </script>
}


