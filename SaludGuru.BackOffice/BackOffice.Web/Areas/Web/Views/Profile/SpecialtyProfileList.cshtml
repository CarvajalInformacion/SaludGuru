@model BackOffice.Models.Profile.ProfileUpSertModel
@{
    ViewBag.Title = "Specialty";
    Layout = "~/Areas/Web/Views/Shared/_Layout.cshtml";
}
<div class="BOProfileMenuWrapper">
    @Html.Partial(MVC.Web.Shared.Views._P_ProfileMenu, null)
</div>
<div class="BOProfileFormWrapper">
    <h3>Agregar Especialidades para este Profesional</h3>
    <div id="divGridSpecialtyProfile"></div>
</div>
<div id="templates" style="display:none;">
    <div id="templateCreate">
        <form method="post" action="@Url.Action(MVC.Profile.ActionNames.ProfileSpecialtyUpsert, MVC.Profile.Name,
                                    new { ProfilePublicId = Model.Profile.ProfilePublicId })">
            <ul class="BOEditDaySetUp">
                <li>
                    <label>Especialidad</label>
                    <input type="hidden" id="Specialty-id" name="Specialty-id" value="" />
                    <input type="text" id="Specialty" name="Specialty" value="" />
                    @{
                        //get json treatment
                        string oSpecialtyData = (new System.Web.Script.Serialization.JavaScriptSerializer()).
                            Serialize(Model.SpecialtyToSelect.
                            Select(x => new
                            {
                                label = x.Name,
                                value = x.CategoryId,
                            }).ToList());
                    }
                </li>
                <li>
                    <label>Principal</label>
                    <input type="checkbox" id="IsDefault" name="IsDefault" />
                </li>
                <li class="BOButtonContainerShort">
                    <!-- hiden fields -->
                    <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
                    <input class="BOButtons" type="submit" value="Agregar" />
                </li>
            </ul>
        </form>
    </div>
    <div id="templateDelete">
        <form method="post" action="@(Url.Action(MVC.Profile.ActionNames.ProfileSpecialtyDelete, MVC.Profile.Name,
                                    new
                                    {
                                        ProfilePublicId = Model.Profile.ProfilePublicId
                                    }))">
            <!-- hiden fields -->
            <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
            <input type="hidden" id="CategoryId" name="CategoryId" value="${CategoryId}" />
            <input class="BOButtons" type="submit" value="Borrar" />
        </form>
    </div>
</div>

@{
    //get json office data
    string oSpecialtyProfile = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.Profile.RelatedSpecialty.
            Select(x => new
            {
                CategoryId = x.CategoryId,
                IsDefault = x.CategoryId != null ? Model.Profile.DefaultSpecialty.CategoryId != null ? x.CategoryId == Model.Profile.DefaultSpecialty.CategoryId ? "Si" : "No" : null : null,
                Name = x.Name
            }).ToList());
}
@section inlinescripts
{
    <script type="text/javascript">
        var vDataAutorizationProfile = @Html.Raw(oSpecialtyProfile)
            $(document).ready(function () {
                debugger;
                //start office grid
                ProfileSpecialtyListGrid('divGridSpecialtyProfile', vDataAutorizationProfile);
            });
    </script>
    <script type="text/javascript">
        var vDataSpecialty = @Html.Raw(oSpecialtyData)
            $(document).ready(function () {
                //start office grid
                OfficeSpecialtyAc('Specialty', vDataSpecialty);
            });
    </script>
}