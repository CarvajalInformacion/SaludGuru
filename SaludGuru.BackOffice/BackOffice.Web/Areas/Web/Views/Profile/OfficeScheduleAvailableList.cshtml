@model BackOffice.Models.Office.OfficeUpsertModel
@{
    ViewBag.Title = "OfficeScheduleAvailableList";
    Layout = "~/Areas/Web/Views/Shared/_Layout.cshtml";
}

<div class="BOProfileMenuWrapper">
    @Html.Partial(MVC.Web.Shared.Views._P_ProfileMenu, null)
</div>
<div>
    @Html.Partial(MVC.Web.Shared.Views._P_ProfileOfficeMenu,
            new BackOffice.Models.Office.OfficeMenuModel()
            {
                OfficeInfo = Model.CurrentOffice,
                SelectedMenu = BackOffice.Models.General.enumOfficeMenu.Treatments
            })
</div>
<div class="BOProfileFormWrapper">
    <div id="divGridShceduleAvailable" style="width:800px;"></div>
    <div style="height:100px;"></div>
</div>

<div id="templates" style="display:none;">
    <div id="templateCreate">
        <form action="@(Url.Action(MVC.Profile.ActionNames.OfficeScheduleAvailableCreate, MVC.Profile.Name,
                new { ProfilePublicId = Model.Profile.ProfilePublicId, OfficePublicId = Model.CurrentOffice.OfficePublicId }))">
            <ul>
                <li>
                    <select id="Day" name="Day">
                        <option value="@(((int)DayOfWeek.Monday).ToString())">Lunes</option>
                        <option value="@(((int)DayOfWeek.Tuesday).ToString())">Martes</option>
                        <option value="@(((int)DayOfWeek.Wednesday).ToString())">Miercoles</option>
                        <option value="@(((int)DayOfWeek.Thursday).ToString())">Jueves</option>
                        <option value="@(((int)DayOfWeek.Friday).ToString())">Viernes</option>
                        <option value="@(((int)DayOfWeek.Saturday).ToString())">Sabado</option>
                        <option value="@(((int)DayOfWeek.Sunday).ToString())">Domingo</option>
                    </select>
                </li>
                <li>
                    <div class="input-append bootstrap-timepicker">
                        <input id="timepicker1" type="text" class="input-small">
                        <span class="add-on"><i class="icon-time"><img src="" width="50" height="50"/></i></span>
                    </div>
                </li>
                <li>
                    @*<div id="dpEndDate" class="input-append">
                        <input id="EndDate" name="EndDate" data-format="hh:mm:ss" type="text" />
                        <span class="add-on">
                            <i data-time-icon="icon-time" data-date-icon="icon-calendar">
                                <img src="" height="50" width="50" />
                            </i>
                        </span>
                    </div>*@
                </li>
                <li>
                    <input type="submit" value="Agregar" />
                </li>
            </ul>
        </form>
    </div>
    <div id="templateDelete">
        <form action="@(Url.Action(MVC.Profile.ActionNames.OfficeScheduleAvailableDelete, MVC.Profile.Name,
                new { ProfilePublicId = Model.Profile.ProfilePublicId, OfficePublicId = Model.CurrentOffice.OfficePublicId }))">
            <input type="hidden" id="ScheduleAvailableId" name="ScheduleAvailableId" value="${ScheduleAvailableId}" />
        </form>
    </div>
</div>

@{
    //get json office data
    string oOfficeScheduleAvailable = (new System.Web.Script.Serialization.JavaScriptSerializer()).
        Serialize(Model.CurrentOffice.ScheduleAvailable.
            Select(x => new
            {
                ScheduleAvailableId = x.ScheduleAvailableId,
                ScheduleDayId = (int)x.Day,
                ScheduleDayName = x.DayName,
                StartTime = x.StartTime.ToString("hh:mm t"),
                EndTime = x.EndTime.ToString("hh:mm t"),
                CreateDate = x.CreateDate.ToString("yyyy/MM/dd hh:mm t"),
            }).ToList());
}
@section inlinescripts
{
    <script type="text/javascript">
        var vDataScheduleAvailable = @Html.Raw(oOfficeScheduleAvailable)
        $(document).ready(function () {
            //start office grid
            OfficeScheduleAvailableListGrid('divGridShceduleAvailable', vDataScheduleAvailable);
            //$('#timepicker1').timepicker();
            //$('#dpStartDate').datetimepicker({ pickDate: false });
            //$('#dpEndDate').datetimepicker({ pickDate: false });
        });
    </script>
}


