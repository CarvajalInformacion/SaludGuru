@model BackOffice.Models.Patient.PatientUpSertModel

<div class="BOFormDataWrapper">
    @{string UrlAction = (Model.Patient == null) ?
            Url.Action(MVC.Patient.ActionNames.PatientUpsert, MVC.Patient.Name) :
            Url.Action(MVC.Patient.ActionNames.PatientUpsert, MVC.Patient.Name, new { PatientPublicId = Model.Patient.PatientPublicId });
    }
    <form action="@UrlAction" method="post">
        <ul>
            <h3>Datos del Paciente</h3>
            <li>
                <label>Nombre</label>
                <input id="Name" name="Name" value="@(Model.Patient == null ? string.Empty : Model.Patient.Name)" type="text" />
            </li>
            <li>
                <label>Apellidos</label>
                <input id="LastName" name="LastName" value="@(Model.Patient == null ? string.Empty : Model.Patient.LastName)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_IT = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                           (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.IdentificationType).
                           Select(x => new { id = x.PatientInfoId, val = string.IsNullOrEmpty(x.Value) ? 0 : int.Parse(x.Value.Replace(" ", "")) }).
                               DefaultIfEmpty(null).
                               FirstOrDefault();
                    if (CatInfo_IT != null)
                    {
                        <input type="hidden" id="CatId_IdentificationType" name="CatId_IdentificationType" value="@CatInfo_IT.id" />
                    }
                }
                <label>Tipo Identificación</label>
                <select id="IdentificationType" name="IdentificationType">
                    @foreach (MedicalCalendar.Manager.Models.General.ItemModel tp in
                                Model.PatientOptions.
                                Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.IdentificationType).
                                OrderBy(x => x.ItemName)
                                .ToList())
                    {
                        if (CatInfo_IT != null && tp.ItemId == CatInfo_IT.val)
                        {
                            <option value="@tp.ItemId" selected="selected">@tp.ItemName</option>
                        }
                        else
                        {
                            <option value="@tp.ItemId">@tp.ItemName</option>
                        }
                    }
                </select>
            </li>

            <li>
                @{
                    var CatInfo_IN = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                           (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.IdentificationNumber).
                           Select(x => new { id = x.PatientInfoId, val = x.Value }).
                               DefaultIfEmpty(null).
                               FirstOrDefault();
                    if (CatInfo_IN != null)
                    {
                        <input type="hidden" id="CatId_IdentificationNumber" name="CatId_IdentificationNumber" value="@CatInfo_IN.id" />
                    }
                }
                <label>Número Identificación</label>
                <input id="IdentificationNumber" name="IdentificationNumber" value="@(CatInfo_IN == null ? string.Empty : CatInfo_IN.val)" type="text" />
            </li>

            @{
                var CatInfo_EM = Model.Patient == null ? null :
                    Model.Patient.PatientInfo.Where
                        (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.Email).
                        Select(x => new { id = x.PatientInfoId, val = x.Value }).
                            DefaultIfEmpty(null).
                            FirstOrDefault();
                if (CatInfo_EM != null)
                {
                    <input type="hidden" id="CatId_Email" name="CatId_Email" value="@CatInfo_EM.id" />
                }
            }
            </li>
            <li>
                <label>Correo electrónico</label>
                <input id="Email" name="Email" value="@(CatInfo_EM == null ? string.Empty : CatInfo_EM.val)" type="text" />
            </li>

            <li>
                @{
                    var CatInfo_AT = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                            (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.Telephone).
                            Select(x => new { id = x.PatientInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_AT != null)
                    {
                        <input type="hidden" id="CatId_Telephone" name="CatId_Telephone" value="@CatInfo_AT.id" />
                    }
                }
            </li>
            <li>
                <label>Teléfono</label>
                <input id="Telefono" name="Telefono" value="@(CatInfo_AT == null ? string.Empty : CatInfo_AT.val)" type="text" />
            </li>

            @{
                var CatInfo_MB = Model.Patient == null ? null :
                    Model.Patient.PatientInfo.Where
                        (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.Mobile).
                        Select(x => new { id = x.PatientInfoId, val = x.Value }).
                            DefaultIfEmpty(null).
                            FirstOrDefault();
                if (CatInfo_MB != null)
                {
                    <input type="hidden" id="CatId_Mobile" name="CatId_Mobile" value="@CatInfo_MB.id" />
                }
            }
            </li>
            <li>
                <label>Teléfono móvil</label>
                <input id="Mobile" name="Mobile" value="@(CatInfo_MB == null ? string.Empty : CatInfo_MB.val)" type="text" />
            </li>

            <li>
                @{
                    var CatInfo_BD = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                            (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.Birthday).
                            Select(x => new { id = x.PatientInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_BD != null)
                    {
                        <input type="hidden" id="CatId_Birthday" name="CatId_Birthday" value="@CatInfo_BD.id" />
                    }
                }
            </li>
            <li>
                <label>Fecha de nacimiento</label>
                <input id="Birthday" name="Birthday" value="@(CatInfo_BD == null ? string.Empty : CatInfo_BD.val)" type="text" />
            </li>

            <li>
                @{
                    var CatInfo_GD = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                            (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.Gender).
                            Select(x => new { id = x.PatientInfoId, val = string.IsNullOrEmpty(x.Value) ? false : bool.Parse(x.Value) }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_GD != null)
                    {
                        <input type="hidden" id="CatId_Gender" name="CatId_Gender" value="@CatInfo_GD.id" />
                    }
                }
                <label>Sexo</label>
                @{
                    if (CatInfo_GD != null && CatInfo_GD.val)
                    {
                        <input type="radio" name="Gender" value="true" checked="checked" /><p> Masculino </p>
                        <input type="radio" name="Gender" value="false" /><p> Femenino </p>
                    }
                    else
                    {
                        <input type="radio" name="Gender" value="true" /><p> Masculino </p>
                        <input type="radio" name="Gender" value="false" checked="checked" /><p> Femenino </p>
                    }
                }
            </li>
            <li class="BOButtonContainerShort">
                @*hiden fields*@
                <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
                <input type="submit" class="BOButtons" value="guardar" />
            </li>
        </ul>
    </form>
</div>

<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script>
    $(function () {
        var pickerOpts = {
            showAnim: "drop",
            duration: jQuery.support.boxModel ? 'normal' : 'slow',
            changeMonth: true,
            changeYear: true
        };
        $("#Birthday").datepicker(pickerOpts);
    });
</script>



