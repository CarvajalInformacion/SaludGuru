@model BackOffice.Models.Patient.PatientUpSertModel

<div class="BOFormDataWrapper">
    @{string UrlAction = (Model.Patient == null) ?
            Url.Action(MVC.Patient.ActionNames.PatientUpsert, MVC.Patient.Name) :
            Url.Action(MVC.Patient.ActionNames.PatientUpsert, MVC.Patient.Name, new { PatientPublicId = Model.Patient.PatientPublicId });
    }
    <form action="@UrlAction" method="post">
        <ul>
            <li>
                <label>Nombre</label>
                <input id="Name" name="Name" value="@(Model.Patient == null ? string.Empty : Model.Patient.Name)" type="text" />
            </li>
            <li>
                <label>Apellidos</label>
                <input id="LastName" name="LastName" value="@(Model.Patient == null ? string.Empty : Model.Patient.LastName)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_IN = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                           (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.IdentificationNumber).
                           Select(x => new { id = x.PatientInfoId, val = x.Value }).
                               DefaultIfEmpty(null).
                               FirstOrDefault();
                    if (CatInfo_IN != null)
                    {
                        <input type="hidden" id="CatId_IdentificationNumber" name="CatId_IdentificationNumber" value="@CatInfo_IN.id" />
                    }
                }
                <label>Número Identificación</label>
                <input id="IdentificationNumber" name="IdentificationNumber" value="@(CatInfo_IN == null ? string.Empty : CatInfo_IN.val)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_EM = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                            (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.Email).
                            Select(x => new { id = x.PatientInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_EM != null)
                    {
                        <input type="hidden" id="CatId_Email" name="CatId_Email" value="@CatInfo_EM.id" />
                    }
                }
            </li>
            <li>
                <label>Correo electrónico</label>
                <input id="Email" name="Email" value="@(CatInfo_IN == null ? string.Empty : CatInfo_EM.val)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_AT = Model.Patient == null ? null :
                        Model.Patient.PatientInfo.Where
                            (x => x.PatientInfoType == MedicalCalendar.Manager.Models.enumPatientInfoType.Telephone).
                            Select(x => new { id = x.PatientInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_AT != null)
                    {
                        <input type="hidden" id="CatId_Telephone" name="CatId_Telephone" value="@CatInfo_AT.id" />
                    }
                }
            </li>
            <li>
                <label>Teléfono</label>
                <input id="Telefono" name="Telefono" value="@(CatInfo_IN == null ? string.Empty : CatInfo_AT.val)" type="text" />
            </li>  

        </ul>
        <div>
            @*hiden fields*@
            <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
        </div>
        <div>
            <input type="submit" />
        </div>
    </form>
</div>
