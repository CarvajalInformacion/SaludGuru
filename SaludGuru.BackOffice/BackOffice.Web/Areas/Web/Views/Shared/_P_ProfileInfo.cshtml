@model BackOffice.Models.Profile.ProfileUpSertModel

<div class="BOFormDataWrapper">
    @{string UrlAction = (Model.Profile == null) ?
            Url.Action(MVC.Profile.ActionNames.ProfileCreate, MVC.Profile.Name) :
            Url.Action(MVC.Profile.ActionNames.ProfileEdit, MVC.Profile.Name, new { ProfilePublicId = Model.Profile.ProfilePublicId });
    }
    <form id="ProfileInfoFormId" action="@UrlAction" method="post">
        <ul>
            <h3>Datos del Perfil</h3>

            <li>
                @{
                    var CatInfo_SC = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.SalesforceCode).
                            Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_SC != null)
                    {
                        <input type="hidden" id="CatId_SalesForce" name="CatId_SalesForce" value="@CatInfo_SC.id" />
                    }
                    if (BackOffice.Models.General.SessionModel.CurrentUserAutorization.Role == SessionController.Models.Profile.enumRole.SystemAdministrator)
                    {
                        <label>Código Salesforce</label>
                        <input id="Salesforce" name="Salesforce" class="required" value="@(CatInfo_SC == null ? string.Empty : CatInfo_SC.val)" type="text" />
                    }
                    else
                    {
                        <input id="Salesforce" name="Salesforce" value="@(CatInfo_SC == null ? string.Empty : CatInfo_SC.val)" type="hidden" />
                    }
                }
            </li>
            <li>
                <label>Nombre</label>
                <input id="Name" class="required" name="Name" value="@(Model.Profile==null?string.Empty:Model.Profile.Name)" type="text" />
            </li>
            <li>
                <label>Apellido</label>
                <input id="LastName" class="required" name="LastName" value="@(Model.Profile==null?string.Empty:Model.Profile.LastName)" type="text" />
            </li>
            <li>
                <label>Tipo de perfil</label>
                <select id="ProfileType" name="ProfileType">
                    @foreach (SaludGuruProfile.Manager.Models.General.ItemModel tp in
                        Model.ProfileOptions.
                        Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.ProfileType).
                        OrderBy(x => x.ItemName)
                        .ToList())
                    {
                        if (Model.Profile != null && tp.ItemId == (int)Model.Profile.ProfileType)
                        {
                            <option value="@tp.ItemId" selected="selected">@tp.ItemName</option>
                        }
                        else
                        {
                            <option value="@tp.ItemId">@tp.ItemName</option>
                        }
                    }
                </select>
            </li>
            <li>
                <label>Estado de perfil</label>
                <select id="ProfileStatus" name="ProfileStatus">
                    @foreach (SaludGuruProfile.Manager.Models.General.ItemModel tp in
                        Model.ProfileOptions.
                        Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.ProfileStatus).
                        OrderBy(x => x.ItemName)
                        .ToList())
                    {
                        if (Model.Profile != null && tp.ItemId == (int)Model.Profile.ProfileStatus)
                        {
                            <option value="@tp.ItemId" selected="selected">@tp.ItemName</option>
                        }
                        else
                        {
                            <option value="@tp.ItemId">@tp.ItemName</option>
                        }
                    }
                </select>
            </li>
            <li>
                @{
                    var CatInfo_IT = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                           (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.IdentificationType).
                           Select(x => new { id = x.ProfileInfoId, val = string.IsNullOrEmpty(x.Value) ? 0 : int.Parse(x.Value.Replace(" ", "")) }).
                               DefaultIfEmpty(null).
                               FirstOrDefault();
                    if (CatInfo_IT != null)
                    {
                        <input type="hidden" id="CatId_IdentificationType" name="CatId_IdentificationType" value="@CatInfo_IT.id" />
                    }
                }
                <label>Tipo Identificación</label>
                <select id="IdentificationType" name="IdentificationType">
                    @foreach (SaludGuruProfile.Manager.Models.General.ItemModel tp in
                                Model.ProfileOptions.
                                Where(x => x.CatalogId == (int)BackOffice.Models.General.enumCatalog.IdentificationType).
                                OrderBy(x => x.ItemName)
                                .ToList())
                    {

                        if (CatInfo_IT != null && tp.ItemId == CatInfo_IT.val)
                        {
                            <option value="@tp.ItemId" selected="selected">@tp.ItemName</option>
                        }
                        else
                        {
                            <option value="@tp.ItemId">@tp.ItemName</option>
                        }
                    }
                </select>
            </li>
            <li>
                @{
                    var CatInfo_IN = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                           (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.IdentificationNumber).
                           Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                               DefaultIfEmpty(null).
                               FirstOrDefault();
                    if (CatInfo_IN != null)
                    {
                        <input type="hidden" id="CatId_IdentificationNumber" name="CatId_IdentificationNumber" value="@CatInfo_IN.id" />
                    }
                }
                <label>Número Identificación</label>
                <input id="IdentificationNumber" class="required" name="IdentificationNumber" value="@(CatInfo_IN == null ? string.Empty : CatInfo_IN.val)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_GD = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Gender).
                            Select(x => new { id = x.ProfileInfoId, val = string.IsNullOrEmpty(x.Value) ? false : bool.Parse(x.Value) }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_GD != null)
                    {
                        <input type="hidden" id="CatId_Gender" name="CatId_Gender" value="@CatInfo_GD.id" />
                    }
                }
                <label>Sexo</label>
                @{
                    if (CatInfo_GD != null && CatInfo_GD.val)
                    {
                        <input type="radio" name="Gender" value="true" checked="checked" /><p> Masculino </p>
                        <input type="radio" name="Gender" value="false" /><p> Femenino </p>
                    }
                    else
                    {
                        <input type="radio" name="Gender" value="true" /><p> Masculino </p>
                        <input type="radio" name="Gender" value="false" checked="checked" /><p> Femenino </p>
                    }
                }
            </li>
            <li>
                @{
                    var CatInfo_EM = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Email).
                            Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_EM != null)
                    {
                        <input type="hidden" id="CatId_Email" name="CatId_Email" value="@CatInfo_EM.id" />
                    }
                }
                <label>Correo electronico</label>
                <input id="Email" class="required" name="Email" value="@(CatInfo_IN == null ? string.Empty : CatInfo_EM.val)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_MB = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Mobile).
                            Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_MB != null)
                    {
                        <input type="hidden" id="CatId_Mobil" name="CatId_Mobil" value="@CatInfo_MB.id" />
                    }
                }
                <label>Teléfono móvil</label>
                <input id="Mobil" name="Mobil" value="@(CatInfo_MB == null ? string.Empty : CatInfo_MB.val)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_WS = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Website).
                            Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_WS != null)
                    {
                        <input type="hidden" id="CatId_Website" name="CatId_Website" value="@CatInfo_WS.id" />
                    }
                }
                <label>Pagina web</label>
                <input id="Website" name="Website" value="@(CatInfo_WS == null ? string.Empty : CatInfo_WS.val)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_FB = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.FacebookProfile).
                            Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_FB != null)
                    {
                        <input type="hidden" id="CatId_FacebookProfile" name="CatId_FacebookProfile" value="@CatInfo_FB.id" />
                    }
                }
                <label>Perfil de facebook</label>
                <input id="FacebookProfile" name="FacebookProfile" value="@(CatInfo_FB == null ? string.Empty : CatInfo_FB.val)" type="text" />
            </li>
            <li>
                @{
                    var CatInfo_IC = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.IsCertified).
                            Select(x => new { id = x.ProfileInfoId, val = string.IsNullOrEmpty(x.Value) ? false : bool.Parse(x.Value) }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_IC != null)
                    {
                        <input type="hidden" id="CatId_IsCertified" name="CatId_IsCertified" value="@CatInfo_IC.id" />
                    }
                }
                <label>Profesional certificado</label>
                @{
                    if (CatInfo_IC != null && CatInfo_IC.val)
                    {
                        <input type="checkbox" id="IsCertified" name="IsCertified" checked="checked" />
                    }
                    else
                    {
                        <input type="checkbox" id="IsCertified" name="IsCertified" />
                    }
                }
            </li>
            @if (BackOffice.Models.General.SessionModel.CurrentUserAutorization.Role == SessionController.Models.Profile.enumRole.SystemAdministrator)
            {
                <li>
                    @{
                var CatInfo_D = Model.Profile == null ? null :
                    Model.Profile.ProfileInfo.Where
                        (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.FeaturedProfile).
                        Select(x => new { id = x.ProfileInfoId, val = string.IsNullOrEmpty(x.Value) ? false : bool.Parse(x.Value) }).
                            DefaultIfEmpty(null).
                            FirstOrDefault();
                if (CatInfo_D != null)
                {
                    <input type="hidden" id="CatId_FeaturedProfile" name="CatId_FeaturedProfile" value="@CatInfo_D.id" />
                }
                    }

                    <label>Profesional destacado</label>
                    @{
                if (CatInfo_D != null && CatInfo_D.val)
                {
                    <input type="checkbox" id="FeaturedProfile" name="FeaturedProfile" checked="checked" />
                }
                else
                {
                    <input type="checkbox" id="FeaturedProfile" name="FeaturedProfile" />
                }
                    }
                </li>
            }
            <li>
                @{
                    var CatInfo_PA = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.OldProfileId).
                            Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_PA != null)
                    {
                        <input type="hidden" id="CatId_OldProfileId" name="CatId_OldProfileId" value="@CatInfo_PA.id" />
                    }
                }
                <label>Identificador anterior</label>
                <input id="OldProfileId" name="OldProfileId" value="@(CatInfo_PA == null ? string.Empty : CatInfo_PA.val)" type="text" />
            </li>
            <li>
                <label>Duración de la cita MarketPlace</label>
                <select id="MPFreeScheduleText" name="MPFreeScheduleText">
                    @{
                        var CatInfo_SP = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.MarketPlaceSlotDuration).
                            Select(x => new { id = x.ProfileInfoId, val = x.Value }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();

                        if (CatInfo_SP != null)
                        {
                            if (CatInfo_SP.val == "20")
                            {
                                <option value="20" selected="selected"> @CatInfo_SP.val </option>
                            }
                            else
                            {
                                <option value="20">20</option>
                            }
                            if (CatInfo_SP.val == "30")
                            {
                                <option value="30" selected="selected"> @CatInfo_SP.val </option>
                            }
                            else
                            {
                                <option value="30">30</option>
                            }
                        }
                        else
                        {
                            <option value="20" selected="selected"> 20 </option>
                            <option value="30" selected="selected"> 30 </option>
                        }
                        if (CatInfo_SP != null)
                        {
                            <input type="hidden" id="CatId_MPFreeScheduleId" name="CatId_MPFreeScheduleId" value="@CatInfo_SP.id" />
                        }
                    }
                </select>
            </li>

            <li>
                @{
                    var CatInfo_PT = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.ProfileText).
                            Select(x => new { id = x.ProfileInfoId, val = x.LargeValue }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_PT != null)
                    {
                        <input type="hidden" id="CatId_ProfileText" name="CatId_ProfileText" value="@CatInfo_PT.id" />
                    }
                }
                <label>Texto de perfil</label>
                @{
                    if (BackOffice.Models.General.SessionModel.CurrentUserAutorization.Role != SessionController.Models.Profile.enumRole.ProfileAdministrator)
                    {
                        <textarea id="ProfileText" name="ProfileText" rows="15" cols="15" style="padding: 0">@(CatInfo_PT != null && !string.IsNullOrEmpty(CatInfo_PT.val) ? CatInfo_PT.val.TrimStart() : string.Empty)</textarea>
                    }
                    else
                    {
                        <textarea id="ProfileText" name="ProfileText" readonly rows="15" cols="15" style="padding: 0">@(CatInfo_PT != null && !string.IsNullOrEmpty(CatInfo_PT.val) ? CatInfo_PT.val.TrimStart() : string.Empty)</textarea>
                    }
                }
            </li>
            <li>
                @{
                    var CatInfo_TC = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.ShortProfile).
                            Select(x => new { id = x.ProfileInfoId, val = x.LargeValue }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_TC != null)
                    {
                        <input type="hidden" id="CatId_ShortProfileId" name="CatId_ShortProfileId" value="@CatInfo_TC.id" />
                    }
                }
                <label>Texto corto de perfil</label>
                @{
                    if (BackOffice.Models.General.SessionModel.CurrentUserAutorization.Role != SessionController.Models.Profile.enumRole.ProfileAdministrator)
                    {
                        <textarea id="ShortProfileText" name="ShortProfileText" rows="15" cols="15" style="padding: 0">@(CatInfo_TC != null && !string.IsNullOrEmpty(CatInfo_TC.val) ? CatInfo_TC.val.TrimStart() : string.Empty)</textarea>
                    }
                    else
                    {
                        <textarea id="ShortProfileText" name="ShortProfileText" readonly rows="15" cols="15" style="padding: 0">@(CatInfo_TC != null && !string.IsNullOrEmpty(CatInfo_TC.val) ? CatInfo_TC.val.TrimStart() : string.Empty)</textarea>
                    }
                }
            </li>
            <li>
                @{
                    var CatInfo_ET = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Education).
                            Select(x => new { id = x.ProfileInfoId, val = x.LargeValue }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_ET != null)
                    {
                        <input type="hidden" id="CatId_Education" name="CatId_Education" value="@CatInfo_ET.id" />
                    }
                }
                <label>Educación</label>
                @{
                    if (BackOffice.Models.General.SessionModel.CurrentUserAutorization.Role != SessionController.Models.Profile.enumRole.ProfileAdministrator)
                    {
                        <textarea id="Education" name="Education" rows="15" cols="15" style="padding: 0">@(CatInfo_ET != null && !string.IsNullOrEmpty(CatInfo_ET.val) ? CatInfo_ET.val.TrimStart() : string.Empty)</textarea>
                    }
                    else
                    {
                        <textarea id="Education" name="Education" readonly rows="15" cols="15" style="padding: 0">@(CatInfo_ET != null && !string.IsNullOrEmpty(CatInfo_ET.val) ? CatInfo_ET.val.TrimStart() : string.Empty)</textarea>
                    }
                }
            </li>
            <li>
                @{
                    var CatInfo_AT = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.Certification).
                            Select(x => new { id = x.ProfileInfoId, val = x.LargeValue }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_AT != null)
                    {
                        <input type="hidden" id="CatId_Certification" name="CatId_Certification" value="@CatInfo_AT.id" />
                    }
                }
                <label>Acreditaciones</label>
                <textarea id="Certification" name="Certification" rows="15" cols="15">@(CatInfo_AT != null && !string.IsNullOrEmpty(CatInfo_AT.val) ? CatInfo_AT.val.TrimStart() : string.Empty)</textarea>
            </li>
            <li>
                @{
                    var CatInfo_KW = Model.Profile == null ? null :
                        Model.Profile.ProfileInfo.Where
                            (x => x.ProfileInfoType == SaludGuruProfile.Manager.Models.enumProfileInfoType.KeyWords).
                            Select(x => new { id = x.ProfileInfoId, val = x.LargeValue }).
                                DefaultIfEmpty(null).
                                FirstOrDefault();
                    if (CatInfo_KW != null)
                    {
                        <input type="hidden" id="CatId_Keywords" name="CatId_Keywords" value="@CatInfo_KW.id" />
                    }
                }
                <label>Palabras clave</label>
                <textarea id="Keywords" name="Keywords" rows="15" cols="15">@(CatInfo_KW != null && !string.IsNullOrEmpty(CatInfo_KW.val) ? CatInfo_KW.val.TrimStart() : string.Empty)</textarea>
            </li>
            @if (BackOffice.Models.General.SessionModel.CurrentUserAutorization.Role != SessionController.Models.Profile.enumRole.ProfileOperator)
            {
                <li class="BOButtonContainerShort">
                    @*hiden fields*@
                    <input type="hidden" name="UpsertAction" id="UpsertAction" value="true" />
                    <input class="BOButtons" type="submit" value="guardar" />
                </li>
            }
        </ul>
    </form>
</div>
